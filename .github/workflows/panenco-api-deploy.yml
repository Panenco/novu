name: 'Panenco API deploy'

on:
  push:
    branches: ['panenco']

env:
  ZONE: europe-west1-b

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TEMPLATE_NAME: ['ws-template-${{github.run_number}}', 'api-template-${{github.run_number}}']
        # GROUP_NAME: [ws-group, api-group]
        service:
          [
            { buildCommand: 'docker-compose -f docker/docker-compose.panenco.yml -p novu build' },
            { buildCommand: 'DOCKER_BUILDKIT=1 pnpm docker:build' },
          ]
        # BUILD_IMAGE_COMMAND:
        #   ['docker-compose -f docker/docker-compose.panenco.yml -p novu build', 'DOCKER_BUILDKIT=1 pnpm docker:build']
        # CONTAINER_NAME: [novu-ws, novu-api]
        # MACHINE_TYPE: ['f1-micro', 'e2-small']
        # HEALTH_CHECK: [ws-health-check, api-health-check]
        # BASE_INSTANCE_NAME: [ws-instance, api-instance]
        # NAMED_PORTS: ['ws:3002', 'api:3000']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
      - name: Install deps
        run: cd apps/api && pnpm --filter novuhq install

      - name: Login
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Set project
        run: gcloud --quiet config set project ${{secrets.GOOGLE_PROJECT_ID}}

      - name: Docker google auth
        run: gcloud auth configure-docker -q

      - name: Build Docker image
        run: ${{ matrix.service.buildCommand }}

      # - name: Tag Docker image
      #   run: docker tag ${{ matrix.CONTAINER_NAME }} eu.gcr.io/${{secrets.GOOGLE_PROJECT_ID}}/${{ matrix.CONTAINER_NAME }}

      # - name: Push Docker image
      #   run: docker push eu.gcr.io/${{secrets.GOOGLE_PROJECT_ID}}/${{ matrix.CONTAINER_NAME }}

      # - name: Create env file
      #   run: gcloud secrets versions access latest --secret=novu > .env.docker

      # - name: Create instance template
      #   run: >
      #     gcloud compute instance-templates create-with-container ${{ matrix.TEMPLATE_NAME }}
      #     --container-env-file .env.docker
      #     --container-image eu.gcr.io/${{secrets.GOOGLE_PROJECT_ID}}/${{ matrix.CONTAINER_NAME }}:latest
      #     --machine-type ${{ matrix.MACHINE_TYPE }}
      #     --tags=allow-health-check

      # - name: Check if MIG exists
      #   id: mig_exists
      #   continue-on-error: true
      #   run: >
      #     gcloud compute instance-groups managed describe ${{ matrix.GROUP_NAME }}
      #     --zone $ZONE

      # - name: Create MIG
      #   if: steps.mig_exists.outcome != 'success'
      #   run: >
      #     gcloud compute instance-groups managed create ${{ matrix.GROUP_NAME }}
      #     --health-check ${{ matrix.HEALTH_CHECK }}
      #     --base-instance-name ${{ matrix.BASE_INSTANCE_NAME }}
      #     --size 2
      #     --template ${{ matrix.TEMPLATE_NAME }}
      #     --zone $ZONE

      # - name: Set named ports on MIG
      #   if: steps.mig_exists.outcome != 'success'
      #   run: >
      #     gcloud compute instance-groups set-named-ports ${{ matrix.GROUP_NAME }}
      #     --named-ports=${{ matrix.NAMED_PORTS }}
      #     --zone=$ZONE

      # - name: Perform rolling update on MIG
      #   if: steps.mig_exists.outcome == 'success'
      #   run: >
      #     gcloud compute instance-groups managed rolling-action start-update ${{ matrix.GROUP_NAME }}
      #     --version=template=${{ matrix.TEMPLATE_NAME }}
      #     --zone $ZONE
